/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

/*!
 * Generated using the Bootstrap Customizer (<none>)
 * Config saved to config.json and <none>
 */

/*"js": [
    "dropdown.js",
    "tooltip.js",
    "popover.js"
  ]*/

if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); +function (t) { "use strict"; var e = t.fn.jquery.split(" ")[0].split("."); if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4") }(jQuery), +function (t) { "use strict"; function e(e) { var o = e.attr("data-target"); o || (o = e.attr("href"), o = o && /#[A-Za-z]/.test(o) && o.replace(/.*(?=#[^\s]*$)/, "")); var i = "#" !== o ? t(document).find(o) : null; return i && i.length ? i : e.parent() } function o(o) { o && 3 === o.which || (t(n).remove(), t(r).each(function () { var i = t(this), n = e(i), r = { relatedTarget: this }; n.hasClass("open") && (o && "click" == o.type && /input|textarea/i.test(o.target.tagName) && t.contains(n[0], o.target) || (n.trigger(o = t.Event("hide.bs.dropdown", r)), o.isDefaultPrevented() || (i.attr("aria-expanded", "false"), n.removeClass("open").trigger(t.Event("hidden.bs.dropdown", r))))) })) } function i(e) { return this.each(function () { var o = t(this), i = o.data("bs.dropdown"); i || o.data("bs.dropdown", i = new s(this)), "string" == typeof e && i[e].call(o) }) } var n = ".dropdown-backdrop", r = '[data-toggle="dropdown"]', s = function (e) { t(e).on("click.bs.dropdown", this.toggle) }; s.VERSION = "3.4.1", s.prototype.toggle = function (i) { var n = t(this); if (!n.is(".disabled, :disabled")) { var r = e(n), s = r.hasClass("open"); if (o(), !s) { "ontouchstart" in document.documentElement && !r.closest(".navbar-nav").length && t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click", o); var a = { relatedTarget: this }; if (r.trigger(i = t.Event("show.bs.dropdown", a)), i.isDefaultPrevented()) return; n.trigger("focus").attr("aria-expanded", "true"), r.toggleClass("open").trigger(t.Event("shown.bs.dropdown", a)) } return !1 } }, s.prototype.keydown = function (o) { if (/(38|40|27|32)/.test(o.which) && !/input|textarea/i.test(o.target.tagName)) { var i = t(this); if (o.preventDefault(), o.stopPropagation(), !i.is(".disabled, :disabled")) { var n = e(i), s = n.hasClass("open"); if (!s && 27 != o.which || s && 27 == o.which) return 27 == o.which && n.find(r).trigger("focus"), i.trigger("click"); var a = " li:not(.disabled):visible a", p = n.find(".dropdown-menu" + a); if (p.length) { var l = p.index(o.target); 38 == o.which && l > 0 && l-- , 40 == o.which && l < p.length - 1 && l++ , ~l || (l = 0), p.eq(l).trigger("focus") } } } }; var a = t.fn.dropdown; t.fn.dropdown = i, t.fn.dropdown.Constructor = s, t.fn.dropdown.noConflict = function () { return t.fn.dropdown = a, this }, t(document).on("click.bs.dropdown.data-api", o).on("click.bs.dropdown.data-api", ".dropdown form", function (t) { t.stopPropagation() }).on("click.bs.dropdown.data-api", r, s.prototype.toggle).on("keydown.bs.dropdown.data-api", r, s.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", s.prototype.keydown) }(jQuery), +function (t) { "use strict"; function e(e, o) { var i = e.nodeName.toLowerCase(); if (-1 !== t.inArray(i, o)) return -1 !== t.inArray(i, r) ? Boolean(e.nodeValue.match(p) || e.nodeValue.match(l)) : !0; for (var n = t(o).filter(function (t, e) { return e instanceof RegExp }), s = 0, a = n.length; a > s; s++)if (i.match(n[s])) return !0; return !1 } function o(o, i, n) { if (0 === o.length) return o; if (n && "function" == typeof n) return n(o); if (!document.implementation || !document.implementation.createHTMLDocument) return o; var r = document.implementation.createHTMLDocument("sanitization"); r.body.innerHTML = o; for (var s = t.map(i, function (t, e) { return e }), a = t(r.body).find("*"), p = 0, l = a.length; l > p; p++) { var h = a[p], c = h.nodeName.toLowerCase(); if (-1 !== t.inArray(c, s)) for (var f = t.map(h.attributes, function (t) { return t }), u = [].concat(i["*"] || [], i[c] || []), d = 0, v = f.length; v > d; d++)e(f[d], u) || h.removeAttribute(f[d].nodeName); else h.parentNode.removeChild(h) } return r.body.innerHTML } function i(e) { return this.each(function () { var o = t(this), i = o.data("bs.tooltip"), n = "object" == typeof e && e; !i && /destroy|hide/.test(e) || (i || o.data("bs.tooltip", i = new h(this, n)), "string" == typeof e && i[e]()) }) } var n = ["sanitize", "whiteList", "sanitizeFn"], r = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"], s = /^aria-[\w-]*$/i, a = { "*": ["class", "dir", "id", "lang", "role", s], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, p = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi, l = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i, h = function (t, e) { this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e) }; h.VERSION = "3.4.1", h.TRANSITION_DURATION = 150, h.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1, viewport: { selector: "body", padding: 0 }, sanitize: !0, sanitizeFn: null, whiteList: a }, h.prototype.init = function (e, o, i) { if (this.enabled = !0, this.type = e, this.$element = t(o), this.options = this.getOptions(i), this.$viewport = this.options.viewport && t(document).find(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!"); for (var n = this.options.trigger.split(" "), r = n.length; r--;) { var s = n[r]; if ("click" == s) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this)); else if ("manual" != s) { var a = "hover" == s ? "mouseenter" : "focusin", p = "hover" == s ? "mouseleave" : "focusout"; this.$element.on(a + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(p + "." + this.type, this.options.selector, t.proxy(this.leave, this)) } } this.options.selector ? this._options = t.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }, h.prototype.getDefaults = function () { return h.DEFAULTS }, h.prototype.getOptions = function (e) { var i = this.$element.data(); for (var r in i) i.hasOwnProperty(r) && -1 !== t.inArray(r, n) && delete i[r]; return e = t.extend({}, this.getDefaults(), i, e), e.delay && "number" == typeof e.delay && (e.delay = { show: e.delay, hide: e.delay }), e.sanitize && (e.template = o(e.template, e.whiteList, e.sanitizeFn)), e }, h.prototype.getDelegateOptions = function () { var e = {}, o = this.getDefaults(); return this._options && t.each(this._options, function (t, i) { o[t] != i && (e[t] = i) }), e }, h.prototype.enter = function (e) { var o = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); return o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, o)), e instanceof t.Event && (o.inState["focusin" == e.type ? "focus" : "hover"] = !0), o.tip().hasClass("in") || "in" == o.hoverState ? void (o.hoverState = "in") : (clearTimeout(o.timeout), o.hoverState = "in", o.options.delay && o.options.delay.show ? void (o.timeout = setTimeout(function () { "in" == o.hoverState && o.show() }, o.options.delay.show)) : o.show()) }, h.prototype.isInStateTrue = function () { for (var t in this.inState) if (this.inState[t]) return !0; return !1 }, h.prototype.leave = function (e) { var o = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type); return o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, o)), e instanceof t.Event && (o.inState["focusout" == e.type ? "focus" : "hover"] = !1), o.isInStateTrue() ? void 0 : (clearTimeout(o.timeout), o.hoverState = "out", o.options.delay && o.options.delay.hide ? void (o.timeout = setTimeout(function () { "out" == o.hoverState && o.hide() }, o.options.delay.hide)) : o.hide()) }, h.prototype.show = function () { var e = t.Event("show.bs." + this.type); if (this.hasContent() && this.enabled) { this.$element.trigger(e); var o = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]); if (e.isDefaultPrevented() || !o) return; var i = this, n = this.tip(), r = this.getUID(this.type); this.setContent(), n.attr("id", r), this.$element.attr("aria-describedby", r), this.options.animation && n.addClass("fade"); var s = "function" == typeof this.options.placement ? this.options.placement.call(this, n[0], this.$element[0]) : this.options.placement, a = /\s?auto?\s?/i, p = a.test(s); p && (s = s.replace(a, "") || "top"), n.detach().css({ top: 0, left: 0, display: "block" }).addClass(s).data("bs." + this.type, this), this.options.container ? n.appendTo(t(document).find(this.options.container)) : n.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type); var l = this.getPosition(), c = n[0].offsetWidth, f = n[0].offsetHeight; if (p) { var u = s, d = this.getPosition(this.$viewport); s = "bottom" == s && l.bottom + f > d.bottom ? "top" : "top" == s && l.top - f < d.top ? "bottom" : "right" == s && l.right + c > d.width ? "left" : "left" == s && l.left - c < d.left ? "right" : s, n.removeClass(u).addClass(s) } var v = this.getCalculatedOffset(s, l, c, f); this.applyPlacement(v, s); var g = function () { var t = i.hoverState; i.$element.trigger("shown.bs." + i.type), i.hoverState = null, "out" == t && i.leave(i) }; t.support.transition && this.$tip.hasClass("fade") ? n.one("bsTransitionEnd", g).emulateTransitionEnd(h.TRANSITION_DURATION) : g() } }, h.prototype.applyPlacement = function (e, o) { var i = this.tip(), n = i[0].offsetWidth, r = i[0].offsetHeight, s = parseInt(i.css("margin-top"), 10), a = parseInt(i.css("margin-left"), 10); isNaN(s) && (s = 0), isNaN(a) && (a = 0), e.top += s, e.left += a, t.offset.setOffset(i[0], t.extend({ using: function (t) { i.css({ top: Math.round(t.top), left: Math.round(t.left) }) } }, e), 0), i.addClass("in"); var p = i[0].offsetWidth, l = i[0].offsetHeight; "top" == o && l != r && (e.top = e.top + r - l); var h = this.getViewportAdjustedDelta(o, e, p, l); h.left ? e.left += h.left : e.top += h.top; var c = /top|bottom/.test(o), f = c ? 2 * h.left - n + p : 2 * h.top - r + l, u = c ? "offsetWidth" : "offsetHeight"; i.offset(e), this.replaceArrow(f, i[0][u], c) }, h.prototype.replaceArrow = function (t, e, o) { this.arrow().css(o ? "left" : "top", 50 * (1 - t / e) + "%").css(o ? "top" : "left", "") }, h.prototype.setContent = function () { var t = this.tip(), e = this.getTitle(); this.options.html ? (this.options.sanitize && (e = o(e, this.options.whiteList, this.options.sanitizeFn)), t.find(".tooltip-inner").html(e)) : t.find(".tooltip-inner").text(e), t.removeClass("fade in top bottom left right") }, h.prototype.hide = function (e) { function o() { "in" != i.hoverState && n.detach(), i.$element && i.$element.removeAttr("aria-describedby").trigger("hidden.bs." + i.type), e && e() } var i = this, n = t(this.$tip), r = t.Event("hide.bs." + this.type); return this.$element.trigger(r), r.isDefaultPrevented() ? void 0 : (n.removeClass("in"), t.support.transition && n.hasClass("fade") ? n.one("bsTransitionEnd", o).emulateTransitionEnd(h.TRANSITION_DURATION) : o(), this.hoverState = null, this) }, h.prototype.fixTitle = function () { var t = this.$element; (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "") }, h.prototype.hasContent = function () { return this.getTitle() }, h.prototype.getPosition = function (e) { e = e || this.$element; var o = e[0], i = "BODY" == o.tagName, n = o.getBoundingClientRect(); null == n.width && (n = t.extend({}, n, { width: n.right - n.left, height: n.bottom - n.top })); var r = window.SVGElement && o instanceof window.SVGElement, s = i ? { top: 0, left: 0 } : r ? null : e.offset(), a = { scroll: i ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop() }, p = i ? { width: t(window).width(), height: t(window).height() } : null; return t.extend({}, n, a, p, s) }, h.prototype.getCalculatedOffset = function (t, e, o, i) { return "bottom" == t ? { top: e.top + e.height, left: e.left + e.width / 2 - o / 2 } : "top" == t ? { top: e.top - i, left: e.left + e.width / 2 - o / 2 } : "left" == t ? { top: e.top + e.height / 2 - i / 2, left: e.left - o } : { top: e.top + e.height / 2 - i / 2, left: e.left + e.width } }, h.prototype.getViewportAdjustedDelta = function (t, e, o, i) { var n = { top: 0, left: 0 }; if (!this.$viewport) return n; var r = this.options.viewport && this.options.viewport.padding || 0, s = this.getPosition(this.$viewport); if (/right|left/.test(t)) { var a = e.top - r - s.scroll, p = e.top + r - s.scroll + i; a < s.top ? n.top = s.top - a : p > s.top + s.height && (n.top = s.top + s.height - p) } else { var l = e.left - r, h = e.left + r + o; l < s.left ? n.left = s.left - l : h > s.right && (n.left = s.left + s.width - h) } return n }, h.prototype.getTitle = function () { var t, e = this.$element, o = this.options; return t = e.attr("data-original-title") || ("function" == typeof o.title ? o.title.call(e[0]) : o.title) }, h.prototype.getUID = function (t) { do t += ~~(1e6 * Math.random()); while (document.getElementById(t)); return t }, h.prototype.tip = function () { if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!"); return this.$tip }, h.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }, h.prototype.enable = function () { this.enabled = !0 }, h.prototype.disable = function () { this.enabled = !1 }, h.prototype.toggleEnabled = function () { this.enabled = !this.enabled }, h.prototype.toggle = function (e) { var o = this; e && (o = t(e.currentTarget).data("bs." + this.type), o || (o = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, o))), e ? (o.inState.click = !o.inState.click, o.isInStateTrue() ? o.enter(o) : o.leave(o)) : o.tip().hasClass("in") ? o.leave(o) : o.enter(o) }, h.prototype.destroy = function () { var t = this; clearTimeout(this.timeout), this.hide(function () { t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null }) }, h.prototype.sanitizeHtml = function (t) { return o(t, this.options.whiteList, this.options.sanitizeFn) }; var c = t.fn.tooltip; t.fn.tooltip = i, t.fn.tooltip.Constructor = h, t.fn.tooltip.noConflict = function () { return t.fn.tooltip = c, this } }(jQuery), +function (t) { "use strict"; function e(e) { return this.each(function () { var i = t(this), n = i.data("bs.popover"), r = "object" == typeof e && e; !n && /destroy|hide/.test(e) || (n || i.data("bs.popover", n = new o(this, r)), "string" == typeof e && n[e]()) }) } var o = function (t, e) { this.init("popover", t, e) }; if (!t.fn.tooltip) throw new Error("Popover requires tooltip.js"); o.VERSION = "3.4.1", o.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }), o.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype), o.prototype.constructor = o, o.prototype.getDefaults = function () { return o.DEFAULTS }, o.prototype.setContent = function () { var t = this.tip(), e = this.getTitle(), o = this.getContent(); if (this.options.html) { var i = typeof o; this.options.sanitize && (e = this.sanitizeHtml(e), "string" === i && (o = this.sanitizeHtml(o))), t.find(".popover-title").html(e), t.find(".popover-content").children().detach().end()["string" === i ? "html" : "append"](o) } else t.find(".popover-title").text(e), t.find(".popover-content").children().detach().end().text(o); t.removeClass("fade top bottom left right in"), t.find(".popover-title").html() || t.find(".popover-title").hide() }, o.prototype.hasContent = function () { return this.getTitle() || this.getContent() }, o.prototype.getContent = function () { var t = this.$element, e = this.options; return t.attr("data-content") || ("function" == typeof e.content ? e.content.call(t[0]) : e.content) }, o.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".arrow") }; var i = t.fn.popover; t.fn.popover = e, t.fn.popover.Constructor = o, t.fn.popover.noConflict = function () { return t.fn.popover = i, this } }(jQuery);