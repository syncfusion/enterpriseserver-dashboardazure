@{
    ViewBag.Title = GlobalAppSettings.SystemSettings.OrganizationName + " - [[[Groups]]]";
}

@section styles{
    @Styles.Render("~/styles/groups")
}

@section scripts{
    <script>
        var checkGroupnameUrl = "@Url.Action("CheckGroupname", "group")";
        var addGroupUrl = "@Url.Action("AddGroup", "group")";
        var deleteGroupViewUrl = "@Url.Action("DeleteGroupView", "group")";
        var addGroupViewUrl = "@Url.Action("AddGroupView","group")";
        var deleteGroupUrl = "@Url.Action("DeleteGroup", "group")";
        var groupPageUrl = "@Url.Action("group", "group")";
        var deleteFromGroupListUrl = "@Url.Action("DeleteFromGroupList", "group")";
    </script>
    @Scripts.Render("~/scripts/groups")

    <script type="text/x-jsrender" id="group-profile-template">
        <a class="item-name grid-content" title="{{:GroupName}}" data-toggle="tooltip" href="@Url.Action("viewgroup", "group")/{{:GroupId}}">{{:GroupName}}</a>
        {{if IsActiveDirectoryGroup}}
        <span title="Active Directory Group" class="su su-windows-ad grid-directory-icon"> </span>
        {{else IsAzureADGroup}}
        <span title="Azure AD Group" class="su su-azure-ad Grid-directory-icon"> </span>
        {{/if}}
    </script>
    <script type="text/x-jsrender" id="group-description-template">
        <span class="grid-content" title="{{:GroupDescription}}" data-toggle="tooltip">
            {{:GroupDescription}}
        </span>
    </script>
    <script type="text/x-jsrender" id="actions-template">
        <div class="dropdown">
            <span class="dropdown-toggle option-icon" data-toggle="dropdown">
                <span class="su su-options"> </span>
            </span>
            <ul class="dropdown-menu" role="menu">
                <li>
                    <a href="@Url.Action("grouppermission","permission")?groupId={{:GroupId}}" data-groupid="{{:GroupId}}">
                        <i class="su su-settings-2"></i>
                        <span>[[[Manage Permissions]]]</span>
                    </a>
                </li>
                <li class="divider"></li>
                {{if !IsActiveDirectoryGroup}}
                <li>
                    <a href="@Url.Action("editgroup", "group")?groupId={{:GroupId}}" data-groupid="{{:GroupId}}">
                        <i class="su su-user-add"></i>
                        <span> [[[Add Users]]] </span>
                    </a>
                </li>

                <li>
                    <a href="@Url.Action("viewgroup","group")/{{:GroupId}}" data-groupid="{{:GroupId}}">
                        <i class="su su-eye"></i>
                        <span>[[[View]]]</span>
                    </a>
                </li>
                {{else}}
                <li>
                    <a href="@Url.Action("viewgroup","group")/{{:GroupId}}" data-groupid="{{:GroupId}}">
                        <i class="su su-eye"></i>
                        <span>[[[View]]]</span>
                    </a>
                </li>

                {{/if}}
                {{if CanDelete}}
                <li>
                    <a href="javascript:void(0);" class="delete" data-groupid="{{:GroupId}}" data-groupname="{{:GroupName}}">
                        <i class="su su-delete"></i>
                        <span> [[[Delete]]]</span>
                    </a>
                </li>
                {{/if}}
            </ul>
        </div>
    </script>
    <script type="text/javascript">
        var groups = @Html.Raw(@ViewBag.groups)
            GridLocalization();
        $(document).ready(function () {
            $("#search-groups").val("");
            addPlacehoder("#search-area");
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({ url: "@Url.Action("RefreshGroup", "Group")", adaptor: "UrlAdaptor" }),
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                enableAltRow: false,
                locale: "en-US",
                allowSorting: true,
                allowSearching: true,
                allowSelection: true,
                allowFiltering: true,
                selectionType: ej.Grid.SelectionType.Multiple,
                selectionSettings: { selectionMode: ["row"] },
                enableRowHover: true,
                enableAltRow: false,
                dataBound: function (args) {
                    $('[data-toggle="tooltip"]').tooltip();
                },
                rowDataBound: function () {
                    var height = $(".e-gridcontent").height();
                    if (height != null) {
                        rowBound();
                    }

                },
                rowSelecting: function (e) {
                    this.multiSelectCtrlRequest = true;
                },
                rowSelected: "fnGroupRowSelected",
                recordClick: "fnGroupRecordClick",
                load: "fnOnGroupfLoad",
                pageSettings: { pageSize: 20 },
                filterSettings: { filterType: "menu" },
                actionBegin: "fnOnGroupGridActionBegin",
                actionComplete: "fnOnGroupGridActionComplete",
                columns: [
                    {
                        template: true,
                        allowSorting: true,
                        allowFiltering: true,
                        headerText: "[[[Name]]]",
                        width: 115,
                        headerTemplateID: "#name-header",
                        templateID: "#group-profile-template",
                        field: "GroupName",
                        type: "string"
                    },
                    {
                        field: "GroupDescription",
                        headerText: "[[[Description]]]",
                        allowSorting: true,
                        allowFiltering: true,
                        type: "string",
                        width: 250,
                        templateID: "#group-description-template",
                        headerTemplateID: "#description-header"
                    },
                    {
                        allowSorting: false,
                        allowFiltering: false,
                        field: "UsersCount",
                        headerText: "[[[Users]]]",
                        type: "string",
                        width: 30
                    },
                    {
                        template: true,
                        allowSorting: false,
                        allowFiltering: false,
                        templateID: "#actions-template",
                        width: 20
                    }

                ]

            });

            $("#new-group-area").ejDialog({
                width: "500px",
                showOnInit: false,
                allowDraggable: true,
                enableResize: false,
                showHeader: false,
                title: "[[[Add New Group]]]",
                enableModal: true,
                closeOnEscape: true,
                close: ''
            });
            $("#delete-group-area").ejDialog({
                width: "499px",
                showOnInit: false,
                allowDraggable: true,
                enableResize: false,
                showHeader: false,
                title: "[[[Delete Group]]]",
                enableModal: true,
                closeOnEscape: true,
                close: ''
            });

            $("#delete-group-area_wrapper").ejWaitingPopup();
            $("#new-group-area_wrapper").ejWaitingPopup();
            $("#groups-delete-confirmation").ejDialog({
                width: "378px",
                showOnInit: false,
                allowDraggable: false,
                enableResize: false,
                height: "auto",
                showHeader: false,
                title: "[[[Delete Groups]]]",
                enableModal: true,
                close: "onDeleteDialogClose",
                closeOnEscape: true,
                open: "onDeleteDialogOpen"
            });
            $("#groups-delete-confirmation_wrapper").ejWaitingPopup();
            $("#body").ejWaitingPopup();

        });


    </script>

    <script type="text/x-jsrender" id="name-header">
        <div class="item-name">[[[Name]]]</div>
    </script>
    <script type="text/x-jsrender" id="description-header">
        <div class="item-header">[[[Description]]]</div>
    </script>
}
@section MainSection{
    @Html.Partial("../UserManagement/_UserMenu")

    <div id="group-directory-container" role="tabpanel" class="row admin-page-container no-padding col-lg-12 pull-left" aria-labelledby="active-directory-settings-link">

        <div class="col-md-12 import-area admin-page-header">
            <hgroup class="col-lg-4 col-md-4 col-sm-6 col-xs-12 no-padding">
                <h2 class="page-title no-padding">[[[GROUPS]]] (<span id="group-count">@ViewBag.groupCount</span>)</h2>
            </hgroup>
            <div id="group-header" class="col-lg-8 col-md-8 col-sm-6 col-xs-12 no-padding">
                <ul class="pull-right col-lg-12 no-padding no-margin groups-menu">
                    <li class="dropdown">
                        <button class="dropdown-toggle primary-button pull-right" data-toggle="dropdown" id="new-user-dropdown" title="[[[Add new group]]]">
                            <span>[[[New Group]]] </span>
                            <span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu" role="menu" id="dropdown-options">
                            <li id="new-group-button" title="Add new group">
                                <a href="javascript:void(0)" title="[[[Add new group]]]" data-toggle="tooltip" data-placement="top">
                                    <i class="su su-group-1"></i>
                                    <span>[[[Create Group]]]</span>
                                </a>
                            </li>
                            <li>
                                <a href="@Url.Action("ActiveDirectoryGroupImport", "group")" data-toggle="tooltip" data-placement="top" title="[[[Import groups from Active Directory]]]">
                                    <i class="su su-windows-ad"></i>
                                    <span>[[[Import from Active Directory]]]</span>
                                </a>
                            </li>

                            <li>
                                <a href="@Url.Action("AzureADGroupImport","group")" data-toggle="tooltip" data-placement="top" title="[[[Import groups from Azure AD]]]">
                                    <i class="su su-azure-ad"></i>
                                    <span>[[[Import from Azure AD]]]</span>
                                </a>
                            </li>
                        </ul>
                    </li>

                    @if (ViewBag.ActiveDirectory != null && ViewBag.AzureAD != null)
                    {
                        <li class="dropdown">
                            <button class="dropdown-toggle primary-button pull-right" data-toggle="dropdown" id="synchronize-dropdown" title="[[[Synchronize Groups]]]">
                                <span>[[[Synchronize]]] </span>
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu" id="synchronize-dropdown-menu">
                                @if (ViewBag.ActiveDirectory != null)
                                {
                                    <li>
                                        <a class="dropdown-toggle" href="@Url.Action("ActiveDirectoryGroup", "Group")" data-toggle="tooltip" data-placement="left" title="[[[Synchronize groups with Active Directory]]]">
                                            <i class="su su-windows-ad"> </i>
                                            <span>[[[Active Directory Synchronization]]]</span>
                                        </a>
                                    </li>
                                }
                                @if (ViewBag.AzureAD != null)
                                {
                                    <li>
                                        <a class="dropdown-toggle" href="@Url.Action("AzureADGroup", "Group")" data-toggle="tooltip" data-placement="left" title="[[[Synchronize groups with Azure AD]]]">
                                            <i class="su su-azure-ad"> </i>
                                            <span>[[[Azure AD Synchronization]]]</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                    else
                    {
                        if (ViewBag.ActiveDirectory != null)
                        {
                            <li>
                                <a href="@Url.Action("ActiveDirectoryGroup","group")" class="link-button pull-right synchronize-groups" title="[[[Synchronize groups with Active Directory]]]">
                                    [[[Active Directory Synchronization]]]
                                </a>
                            </li>

                        }
                        if (ViewBag.AzureAD != null)
                        {
                            <li>
                                <a href="@Url.Action("AzureADGroup", "group")" class="link-button pull-right synchronize-groups" title="[[[Synchronize groups with Azure AD]]]">
                                    [[[Azure AD Synchronization]]]
                                </a>
                            </li>
                        }
                    }
                    <li class="flying-add hide" id="add-user-in-groups">
                        <button class="critical-action-button group-delete-button" title="[[[Delete selected Groups]]]" data-groupid="1">[[[Delete Groups]]]</button>
                     </li>
                   </ul>
                <input type="hidden" name="GroupCount" id="group-count-text" value="@ViewBag.groupCount" />
                <input type="hidden" id="adgroup-count-text" value="@ViewBag.AdGroupCount">
                <input type="hidden" id="azureadgroup-count-text" value="@ViewBag.AzureADGroupCount">
            </div>
        </div>
        <div id="grid-container" class="col-lg-12 admin-page-body">
            <div id="search-area" class="pull-right">
                <input type="text" id="search-groups" class="pull-left no-margin" placeholder="[[[Search groups]]]" />
                <span class="su close-icon su-inner-close pull-left no-margin" id="clear-search" title="[[[Clear search]]]"></span>
                <span class="su su-search search-group pull-left no-margin" title="[[[Search]]]"></span>
            </div>
            <div id="Grid" data-gridName="Group" class="pull-left">
            </div>
            @if (ViewBag.AdGroupCount > 0)
            {
                <div id="ad-indication" class="ad-azure-indication col-lg-12"><span class="su su-windows-ad"> </span> - <span class="margin">[[[Active Directory group]]]</span></div>
            }
            @if (ViewBag.AzureADGroupCount > 0)
            {
			<div id="azure-ad-indication" class="ad-azure-indication col-lg-12"><span class="su su-azure-ad"> </span> - <span class="margin">[[[Azure AD group]]]</span></div>               
            }
        </div>
        <div id="new-group-area" class="no-padding">
            <iframe id="new-group-iframe" class="pull-left"></iframe>
        </div>
        <div id="delete-group-area" class="no-padding">
            <iframe id="delete-group-iframe" class="pull-left"></iframe>
        </div>
    </div>
    @Html.Partial("../Group/_MultipleGroupDeleteDialog")
}