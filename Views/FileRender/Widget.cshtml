<!DOCTYPE html>

@{
    Layout = null;
    ViewBag.Title = ViewBag.ItemName + " - [[[View Widget]]] -" + GlobalAppSettings.SystemSettings.OrganizationName;
    var baseUrl = ViewBag.BaseUrl;
    var dashboardServiceUrl = GlobalAppSettings.SystemSettings.DashboardServiceUrl;
    var itemLocation = ViewBag.ItemLocation as string;
    itemLocation = itemLocation != null ? itemLocation.Replace("\\", "\\\\") : string.Empty;
    var enableComment = "false";
    ItemDetail itemDetail = ViewBag.itemDetail;
    var isUserAuthenticated = "false";
    var isPublic = GlobalAppSettings.SystemSettings.IsMarkItemsPublic && itemDetail.IsPublic ? "true" : "false";
    ViewBag.DateFormat = GlobalAppSettings.SystemSettings.DateFormat;
    ViewBag.TimeFormat = GlobalAppSettings.SystemSettings.TimeFormat ? "HH:mm" : "hh:mm tt";
    var accessToken = ViewBag.accessToken;
    var organizationName = GlobalAppSettings.SystemSettings.OrganizationName;
    var ogpImage = string.Empty;
    if (GlobalAppSettings.SystemSettings.StorageType == (int)StorageType.AzureBlob)
    {
        ogpImage = GlobalAppSettings.AzureBlob.AzureBlobStorageUri + "/" + GlobalAppSettings.AzureBlob.AzureBlobStorageContainerName + "/" + GlobalAppSettings.GetStorageMode() + "/Content/Images/Application/" + GlobalAppSettings.SystemSettings.LoginLogo;
    }
    else
    {
        ogpImage = baseUrl + "/Content/Images/Application/" + GlobalAppSettings.SystemSettings.LoginLogo;
    }
    var ogpDescription = string.IsNullOrEmpty(itemDetail.Description)
        ? organizationName + "Application provides a web interface to manage and share dashboards, to easily collaborate with other users by commenting on dashboards, to receive email notifications when specific values reach a threshold in data notification, and to track important data from multiple dashboards by pinning the desired widgets to a home screen."
        : itemDetail.Description;
    var isUnlisted = itemDetail.IsUnlisted ? "true" : "false";
    var unlistedcode = itemDetail.UnlistedCode;
    var isOwner = Convert.ToBoolean(itemDetail.CreatedById == ((HttpContext.Current.User as ServerPrincipal) != null ? (HttpContext.Current.User as ServerPrincipal).UserId : 0)) ? "true" : "false";
}

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="og:title" content="@organizationName | @itemDetail.Name" />
    <meta property="og:description" content="@ogpDescription" />
    <meta property="og:image" content="@ogpImage" />
    <meta property="og:url" content="@GlobalAppSettings.SystemSettings.BaseUrl" />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="@organizationName" />
    <meta property="twitter:title" content="@organizationName | @itemDetail.Name" />
    <meta property="twitter:url" content="@GlobalAppSettings.SystemSettings.BaseUrl" />
    <meta property="twitter:card" content="summary" />
    <meta property="twitter:description" content="@ogpDescription" />
    <meta property="twitter:image" content="@ogpImage" />
    @if (GlobalAppSettings.SystemSettings.StorageType == (int)StorageType.AzureBlob)
    {
        <link rel="icon" href="@GlobalAppSettings.AzureBlob.AzureBlobStorageUri/@GlobalAppSettings.AzureBlob.AzureBlobStorageContainerName/@GlobalAppSettings.GetStorageMode()/Content/Images/Application/@GlobalAppSettings.SystemSettings.FavIcon" onerror="if (this.href != '~/Content/Images/Application/Favicon.png') this.href = '~/Content/Images/Application/Favicon.png';" />
    }
    else
    {
        <link rel="icon" href="~/Content/Images/Application/@GlobalAppSettings.SystemSettings.FavIcon" onerror="if (this.href != '~/Content/Images/Application/Favicon.png') this.href = '~/Content/Images/Application/Favicon.png';" />
    }

    <title>@ViewBag.Title</title>
    @Styles.Render("~/styles/file-render-ej", DeviceDetection.IsMobile ? "~/styles/file-render-dashboard-mobile" : "~/styles/file-render-dashboard")
    <style>
        html {
            height: 100%;
        }

         #widget_WaitingPopup{
             height: 100% !important;
             width: 100% !important;
             background-color: #fff !important;
         }

        #widget_WaitingPopup .e-image {
            background: url('@Url.Content("~/Content/Images/waitingpopup.gif")') no-repeat scroll 0px 18px transparent;
            top : 350px !important;
        }
    </style>
    <script>
        var pinWidgetToHomepageUrl = "@Url.Action("PinWidgetToHomepage", "Homepages")";
        window.destroyAll = function () { try { ej.widget.destroyAll($('.e-js').off()); } catch (e) { } $(document.body).html('-'); CollectGarbage(); };
        function loadPopup(){
            $("#widget").ejWaitingPopup();
            $("#widget").ejWaitingPopup("show");
            window.location.href = window.location.href.replace(window.location.pathname + window.location.search, "");
        }
    </script>
    @Scripts.Render(DeviceDetection.IsMobile ? "~/scripts/widget-render-mobile" : "~/scripts/widget-render", "~/scripts/dashboard-render-ejviewer", "~/scripts/dashboard-render-ejvisualizationcontrols", "~/scripts/dashboard-render-ejchart")

    @{
        if (HttpContext.Current.Request.IsAuthenticated && HttpContext.Current.User != null && HttpContext.Current.User.Identity != null && HttpContext.Current.User.Identity.IsAuthenticated)
        {
            enableComment = ViewBag.IsSlideshow ? "false" : "true";
            isUserAuthenticated = "true";
        }
        else
        {
            enableComment = "false";
            isUserAuthenticated = "false";
        }
    }
    <script>
        function CommentImageDialogClose() {
            $("#commentImage_popup").ejDialog("close");
            $("#commentImage_popup_image").attr('src', "");
        }
    </script>
</head>

<body style="width: 100%; height: 100%;">
    <div id="widget" style="width: 100%; height: 100%;"></div>

    @if (DeviceDetection.IsMobile)
    {
        <script>
            var enableComment = "@enableComment";
            $(document)
               .ready(function() {
                   if(enableComment == "false"){
                       $("#comment-li").addClass("displayNone");
                   }
                   else{
                       $("#comment-li").removeClass("displayNone");
                   }
               });
        </script>
        <nav id="server-mobile-navbar" class="navbar navbar-inverse">
            <div class="container-fluid">
                <ul class="nav navbar-nav col-xs-12 no-padding no-margin">
                    <li class="col-xs-4">
                        <a href="@Url.Action("Widgets", "Widgets")" class="su su-nav-home" onclick="loadPopup();"></a>
                    </li>
                    <li class="col-xs-4">
                        <a href="javascript:void(0)" class="su su-nav-widgets active"></a>
                    </li>
                    <li class="col-xs-4" id="comment-li">
                        @if (ViewBag.isWidgetCommented == "true")
                        {
                            <a href="javascript:void(0)" class="su su-with-comment server-comment"></a>
                        }
                        else
                        {
                            <a href="javascript:void(0)" class="su su-without-comment server-comment"></a>
                        }
                    </li>
                </ul>
            </div>
        </nav>
    }

    <input id="comment_Type" type="hidden" data-item-type="individual-widget">
    <input id="isMultiDashboard" type="hidden" data-item-id="false">
    <input id="widget_Comment" class="displayNone" data-item-id="@ViewBag.ItemId">
    <input id="dashboard_Comment" class="displayNone" data-item-id="@Guid.Empty">
    <input id="is_mobile" type="hidden" value="@DeviceDetection.IsMobile.ToString().ToLower()">
    <div id="commentModuleContainer" class="displayNone" style="background-image: url('@Url.Content("~/Content/Images/waitingpopup.gif")');background-color: #fff; background-repeat: no-repeat; background-position: 50% 50%;">
        <iframe id="commentModuleContainer_iframe" class="comment-popup-frame" src="@Url.Action("IndividualWidgetCommentPartialView", "Comments")?itemId=@ViewBag.ItemId" style="height: 100%; width: 100%; "></iframe>
    </div>

    <iframe id="delete_popup_iframe" class="comment-popup-frame displayNone" src="@Url.Action("CommentDeletePartialView", "Comments")" allowtransparency="true" style="position: absolute;"></iframe>

    <div id="commentImage_popup" class="col-md-12 no-padding hidden">
        <div class="col-lg-12 no-padding" id="PopupContainer">
            <div class="col-md-12">
                <div class="col-xs-12 no-padding" style="float:right">
                    <a href="javascript:void(0);" onclick="CommentImageDialogClose()" class="PopupClose"><span class="su su-close"></span></a>
                </div>
            </div>
            <div class="dialogBody col-xs-12 no-padding">
                <img id="commentImage_popup_image" src="" style="width: 100%;">
            </div>
        </div>
    </div>

    <div id="pin-widget-popup" data-widget-id="" data-widget-name="">
        <iframe id="pin-widget-popup-iframe" class="" style="height: 100%; width: 100%;"></iframe>
    </div>
    <div id="success-alert">
        <div id="image-container">
            <div class="image-holder">
                <span class="su su-tick" alt="Success Icon"></span>
            </div>
        </div>
        <div id="message">
            <h1 id="message-header"></h1>
            <span id="message-content"></span>
        </div>
        <div class="close-div">
            <span id="close-content">[[[Close]]]</span>
        </div>
    </div>
    <div id="warning-alert">
        <div id="image-container">
            <span class="su su-warning-alt" alt="Warning Icon"></span>
        </div>
        <div id="message">
            <h1 id="message-header"></h1>
            <span id="message-content"></span>
        </div>
        <div class="close-div">
            <span id="close-content">[[[Close]]]</span>
        </div>
    </div>   

</body>

<script type="text/javascript">
    var token ="@accessToken";
    var isUserAuthenticated = "@isUserAuthenticated";
    var isSlideshow = "@ViewBag.IsSlideshow".toLowerCase() == "true" ? true : false;
    var isOwner = @isOwner;
    function IframeLoad() {
	if(window.parent.$("#item-viewer").data("ejWaitingPopup") != undefined) {
			window.parent.$("#item-viewer").ejWaitingPopup("hide");
		}
	}
    $(document).ready(function () {

		IframeLoad();
		var te = "@Html.Raw(itemLocation)";
        var ReportName = "@ViewBag.ItemName";
        var ReportDescription = "@ViewBag.ItemDescription";
        var widgetId = "@ViewBag.ItemId";
        var browser = ej.browserInfo();
        $("#pin-widget-popup").ejDialog({
            width: "400px",
            height: "310px",
            showOnInit: false,
            allowDraggable: true,
            enableResize: false,
            title: "[[[Pin Item to the Homepage]]]",
            enableModal: true,
            showHeader: false
        });
        $("#pin-widget-popup_wrapper").ejWaitingPopup();

        if (browser != null && browser.name === "msie" && parseFloat(browser.version) <= 8.0) {
            var divString = '<div style="top:20%;width:575px;margin:0px auto;position:relative;text-align:center">' +
                '<div style="padding:35px 68px 35px 68px;" class="e-dbrd-control-container">' +
                '<p style="font-size:18px;font-weight:bold">[[[Internet Explorer 8 and Internet Explorer 11 in Enterprise Mode are not supported]]]</p>' +
                '<p style="font-size:10px">[[[Please upgrade to a newer browser if you are using IE8 or turn off Enterprise Mode if you are using IE11 in Enterprise Mode.]]]</p>' +
                '<p style="text-align:left;margin-top:20px">[[[Supported Browsers:]]]</p><div class="alert-ie">' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/IE.png")" /></span><p>Internet Explorer 9+</p> </div> ' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/Edge.png")" /> </span><p>Microsoft Edge</p></div>' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/Firefox.png")" /></span><p>Mozilla Firefox 22+</p></div>' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/Chrome.png")" /></span><p>Chrome 17+</p></div>' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/Opera.png")" /></span><p>Opera 12+</p></div>' +
                '<div><span><img  src="@Url.Content("~/api/themes/common-images/Safari.png")" /></span><p>Safari 5+</p></div></div></div>'
            var body = document.getElementById("widget");
            body.style.backgroundColor = "white";
            body.innerHTML = divString;
        } else {
            $("#widget").ejDashboardViewer({
                accessToken : token,
                serviceUrl: "@dashboardServiceUrl",
                dashboardPath: te,
                reportName: ReportName,
                reportDescription: ReportDescription,
                enableExport: true,
                enablePrint: false,
                localeSettings: {
                    resourcePath: "",
                    culture: "@ViewBag.Culture"
                },
                filterParameters: "@Html.Raw(ViewBag.FilterQuery)",
                onWidgetCommented: "openWidgetComment",
                onCommentDialogClosing: "closeWidgetComment",
                _itemId:"@ViewBag.ItemId",
                _isPublic : @isPublic,
                _isUnlisted : @isUnlisted,
                _unlistedCode : "@unlistedcode",
                allowComment: @enableComment,
                commentSettings:{
                    isWidgetCommented: @Html.Raw(ViewBag.isWidgetCommented),
                    },
                beforeWidgetIconRendered: function (event) {
                    if (isSlideshow) {
                        return;
                    }

                    if($("#is_mobile").val() == "false"){
                        if(event.model._isPublic== false && event.model._isUnlisted == false){
                            if(!event.isFilterWidget){
                                event.iconsinformation.unshift({ "classname": "su su-pin","name":"Pin Widget","datatooltip":"[[[Pin Widget]]]", "marginright": "-18px", "margintop":"4px"});
                            }
                        } else if ((event.model._isPublic == true || (event.model._isUnlisted && isOwner)) && isUserAuthenticated.toLowerCase()=="true") {
                            if(!event.isFilterWidget){
                                event.iconsinformation.unshift({ "classname": "su su-pin","name":"Pin Widget","datatooltip":"[[[Pin Widget]]]", "marginright": "-18px", "margintop":"4px"});
                            }
                        }
                    }
                },
                onMenuIconClick: function(information){
                    if(information.name.toLowerCase() == "pin widget"){
                        $("#pin-widget-popup").ejDialog("open");
                        $("#pin-widget-popup_wrapper").ejWaitingPopup("show");
                        $("#pin-widget-popup-iframe").attr("src", pinWidgetToHomepageUrl);
                        $("#pin-widget-popup").attr("data-widget-id", widgetId).attr("data-widget-name",information.headertext);
                    }
                },
                dashboardCreated : "openComments",
                resizeDashboard :"closeCommentOnResize"
            });
        }

        $(document).on("click", ".close-div", function () {
            $('#success-alert').fadeOut();
            $('#warning-alert').fadeOut();
        });
    });
</script>