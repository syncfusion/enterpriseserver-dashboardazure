@using Newtonsoft.Json
@{
    var permission = ViewBag.ItemAddOptions as Dictionary<ItemType, bool>;
    ViewBag.Title = GlobalAppSettings.SystemSettings.OrganizationName + " - [[[Dashboards]]]";
    var categories = string.Empty;
    var isMarkItemsPublic = GlobalAppSettings.SystemSettings.IsMarkItemsPublic;
    var currentUserId = ViewBag.currentUserId;
    var isViewRequest = ViewBag.IsViewRequest;
    var itemName = ViewBag.itemName;
    var userId = (HttpContext.Current.User as ServerPrincipal).UserId;
    var dashboardUrl = Url.Action("Dashboards", "Dashboards");
    var index = dashboardUrl.LastIndexOf("/dashboards");
    var dashboardCultureUrl = dashboardUrl;
    var isAdmin = HttpContext.Current.Session["IsAdmin"] != null && Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]);
    if (index != -1)
    {
        dashboardCultureUrl = dashboardUrl.Substring(1, index) + ViewBag.Culture + "/dashboards";
    }

    if (ViewBag.Categories != null)
    {
        categories = JsonConvert.SerializeObject(ViewBag.Categories);
    }

    var requestType = ViewBag.HasFavoriteItem == true ? DisplayCategory.FavouriteItems : DisplayCategory.AllDashboards;

    var activeClass = "active";
    var backButton = "none";

    var sectionName = HttpContext.Current.Request.RequestContext.RouteData.Values["categoryName"];

    var currentUrl = new Uri(ViewBag.Url ?? HttpContext.Current.Request.Url.ToString());

    var url = currentUrl.ToString();

    if (sectionName == null)
    {
        sectionName = ViewBag.HasFavoriteItem == true ? "[[[Favorites]]]" : "[[[All Dashboards]]]";
    }

    if (ViewBag.CategoryName != null)
    {
        requestType = DisplayCategory.SpecificCategory;
        sectionName = ViewBag.CategoryName;
        activeClass = String.Empty;
        backButton = "block";
    }
    else if (url.IndexOf("view=public") > -1)
    {
        requestType = DisplayCategory.PublicItems;
        sectionName = "[[[Public Dashboards]]]";
        activeClass = String.Empty;
    }
    else if (url.IndexOf("view=recent") > -1)
    {
        requestType = DisplayCategory.RecentItems;
        sectionName = "[[[Recent Dashboards]]]";
        activeClass = String.Empty;
    }
    else if (url.IndexOf("view=favorites") > -1)
    {
        requestType = DisplayCategory.FavouriteItems;
        sectionName = "[[[Favorite Dashboards]]]";
        activeClass = String.Empty;
    }
    else if (url.IndexOf("view=categories") > -1)
    {
        requestType = DisplayCategory.AllCategory;
        sectionName = "[[[All Categories]]]";
        activeClass = String.Empty;
    }
    else if (url.IndexOf("view=all") > -1)
    {
        requestType = DisplayCategory.AllDashboards;
        sectionName = "[[[All Dashboards]]]";
        activeClass = String.Empty;
    }
    else if (url.IndexOf("view=drafts") > -1)
    {
        requestType = DisplayCategory.DraftItems;
        sectionName = "[[[Draft Dashboards]]]";
        activeClass = String.Empty;
    }
}

@section styles{
    @Styles.Render("~/styles/dashboards-page")

    <style>
        #items_WaitingPopup {
            display: none !important;
        }
    </style>
}

@section scripts{
    <script>
        var i_am_ie9 = false;
        var deleteConfirmUrl = "@Url.Action("deleteconfirmation", "items")";
        var getdashboarddetailsUrl = "@Url.Action("getdashboarddetails", "dashboards")";
        var getdraftdashboarddetailsUrl = "@Url.Action("getdraftdashboarddetails", "dashboards")";
        var getDataSourceDetailsUrl = "@Url.Action("getdatasources", "dashboards")";
        var editCategoryUrl = "@Url.Action("getcategorydetails", "category")";
        var viewDashboardUrl = "@Url.Action("Index", "FileRender")";
        var getCategoryItem = "@Url.Action("RefreshCategoryList", "Dashboards")";
        var getLinkDialogViewUrl = "@Url.Action("GetLinkView", "items")";
        var embedLinkDialogViewUrl= "@Url.Action("EmbeddedLinkView", "items")";
        var categories;
        if ('@ViewBag.Categories' != '')
            categories =@Html.Raw(categories);
        else
            categories = "";

        $(document).ready(function (e) {
            $("#item-grid-container").ejWaitingPopup();
            $("[data-toggle='tooltip']").tooltip();
            refreshScrollerForCategory();
        });

        $(window).resize(function (e) {
            $("[data-toggle='tooltip']").tooltip();
            refreshScrollerForCategory();
        });

        serverApp.controller("categoryController", ["$scope", "ajaxService", function ($scope, ajaxService) {
            if (categories != "") {
                $scope.categories = categories;

            }
            else {
                ajaxService.getData(getCategoryItem, "")
                    .then(function (data) {
                        $scope.categories = data;
                        refreshScrollerForCategory();
                    });
            }

            $scope.showCategories = false;
            $scope.showDashbaords = false;
            $scope.enableItemRequest = false;
            $scope.showCategoryDropdown = false;
            $scope.showDashboardDropdown = false;
            $scope.itemRequestType = "@((int)requestType)";

            if (($scope.itemRequestType == "@((int)DisplayCategory.PublicItems)") || ($scope.itemRequestType == "@((int)DisplayCategory.AllDashboards)") || ($scope.itemRequestType == "@((int)DisplayCategory.FavouriteItems)") || ($scope.itemRequestType == "@((int)DisplayCategory.RecentItems)") || ($scope.itemRequestType == "@((int)DisplayCategory.AllCategory)")) {
                $(".tool-tip").hide();

            }


            $scope.category = "";
            $scope.search = {
                "Name": ""
            };

            $scope.refreshCategorySection = function (categoryId) {
                $.xhrPool.abortAll();
                 ajaxService.getData(getCategoryItem, "")
                    .then(function (data) {
                        $scope.categories = data;
                        refreshScrollerForCategory();
                        setTimeout(function () {
                            if (categoryId != null) {
                                if (!$(".all-items").hasClass("active")) {
                                    $(".all-items").trigger("click");
                                }
                                $(".category-link[data-id='" + categoryId + "']").trigger("click");
                            }
                        }, 0);
                    });

                if (categoryId != null) {
                    $(".item-navigation li").removeClass("active");
                    $(".all-items").addClass("active");
                    $(".category-link[data-id='" + categoryId + "']").trigger("click");
                }
            }

            $scope.onClickDisplayCategory = function ($event, section) {
                $(".tool-tip").hide();
                var gridObj = $("#items").data("ejGrid");
                $("[data-toggle='tooltip']").tooltip();
                $scope.itemRequestType = $event != "" ? $event.currentTarget.getAttribute("data-display-category") : $(".item-navigation li[data-value='" + section + "']").attr("data-display-category");

                $scope.showOrHidePanels();

                gridObj.model.filterSettings.filteredColumns = [];

                if ($scope.itemRequestType !== "1") {
                    if ($(".search-area").hasClass("add-background")) {
                        $(".search-home-section:visible").addClass("show");
                       if ($(".search-home-section").val() != "") {
                            var dashboardScope = angular.element(document.getElementById("server-items-container")).scope();
                            if (!$("#category-list").is(":visible") || $("#category-list").length <= 0) {
                               if ($(".all-items").hasClass("active")) {
                                    gridObj.model.filterSettings.filteredColumns = [{ field: "CategoryName", operator: "equal", value: $("#category-section-name").html() }];
                                }
                            }
                        }
                    }

                    gridObj.model.query._params.push({

                        key: "displayCategory",
                        value: $scope.itemRequestType

                    });

                    $.xhrPool.abortAll();
                    ajaxService.cancelRequest();
                    $("#items").find(".e-gridcontent").css("visibility", "hidden");
                    setTimeout(function () {
                        gridObj.refreshContent();
                    }, 0);
                  }
                else {
                    $.xhrPool.abortAll();
                    ajaxService.cancelRequest();
                    $scope.refreshCategorySection();

                }
                $("#back-icon").css("display", "none");

                $("#category-listing").removeClass("specific-dashboards category");

                if ($scope.itemRequestType != "100") {

                    if ($event != "") {
                        $("#category-section-name").html($event.currentTarget.getAttribute("data-section")).attr({ "data-original-title": $event.currentTarget.getAttribute("data-section") });
                    } else {
                        $("#category-section-name").html($(".item-navigation li[data-value='" + section + "']").attr("data-section")).attr({ "data-original-title": $(".item-navigation li[data-value='" + section + "']").attr("data-section") });
                    }

                    if (( $scope.itemRequestType == "@((int)DisplayCategory.AllDashboards)") || ( $scope.itemRequestType == "@((int)DisplayCategory.AllCategory)") || ( $scope.itemRequestType == "@((int)DisplayCategory.RecentItems)") || ( $scope.itemRequestType == "@((int)DisplayCategory.FavouriteItems)") ) {
                        $(".tool-tip").hide();
                    }
                 }

                refreshScrollerForCategory();


            };

            $scope.clearSearch = function () {
                $("[data-toggle='tooltip']").tooltip();

                if ($scope.search.Name != "")
                    clearSearch = true;
                else
                    clearSearch = false;

                $scope.search.Name = "";

                refreshScrollerForCategory();
            }

            $scope.getItemsInCategory = function ($event, category) {

                $("[data-toggle='tooltip']").tooltip();

                $scope.itemRequestType = $event != "" ? $event.currentTarget.getAttribute("data-display-category") : $(".category-link[data-category='" + category + "']").attr("data-display-category");
                $scope.category = $event != "" ? $event.currentTarget.getAttribute("data-category") : category;
                $scope.showOrHidePanels();
                var itemGrid = $("#items").data("ejGrid");
                $("#items").find(".e-gridcontent").css("visibility", "hidden");
                if ($scope.itemRequestType !== "1") {

                    itemGrid.model.filterSettings.filteredColumns = [{ field: "CategoryName", operator: "equal", value: $scope.category }];
                    $.xhrPool.abortAll();
                    ajaxService.cancelRequest();
                    $("#items").find(".e-gridcontent").css("visibility", "hidden");
                    setTimeout(function () {
                        itemGrid.refreshContent();
                    }, 0);
                }
                else {
                    $.xhrPool.abortAll();
                    ajaxService.cancelRequest();
                    $scope.refreshCategorySection();
                }

                if ($scope.itemRequestType == "100") {
                    $("#category-section-name").html($scope.category).attr({ "data-original-title": $scope.category });
                }
                $("#back-icon").css("display", "block");
                $("#category-listing").addClass("specific-dashboards category");

                var url = $event != "" ? $event.currentTarget.getAttribute("data-value") : $(".category-link[data-category='" + category + "']").attr("data-value");
                var currentUrl = window.location.pathname + window.location.search;
                if (currentUrl != url && window.innerWidth >= 1041) {
                    if (history.pushState != undefined && $event != "") {
                        history.pushState({}, "", url);
                    }
                }
            };

            $scope.onBackButtonClick = function () {
                refreshScrollerForCategory();
                $(".item-list-panel").ejWaitingPopup("show");
                $("[data-toggle='tooltip']").tooltip();
                $scope.showCategories = true;
                $scope.showDashbaords = false;

                $scope.refreshCategorySection();

                $("#back-icon").css("display", "none");
                $("#category-listing").removeClass("specific-dashboards category");
                $("#category-section-name").html("[[[All Categories]]]").attr({ "data-original-title": "[[[All Categories]]]" });
                $(".item-list-panel").ejWaitingPopup("hide");

                $scope.showCategoryDropdown = true;
                $scope.showDashboardDropdown = false;
                var url = $(".all-items").attr("href");
                var currentUrl = window.location.pathname + window.location.search;
                if (currentUrl != url && window.innerWidth >= 1041) {
                    if (history.pushState != undefined) {
                        history.pushState({}, "", url);
                    }
                }
            }

            $scope.showOrHidePanels = function () {
                switch ($scope.itemRequestType) {
                    case "1":
                        $scope.showCategories = true;
                        $scope.showDashbaords = false;

                        $scope.showCategoryDropdown = true;
                        $scope.showDashboardDropdown = false;
                        break;

                    case "2":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;

                    case "3":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;

                    case "4":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;

                    case "5":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;
                    case "9":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;

                    case "100":
                        $scope.showCategories = false;
                        $scope.showDashbaords = true;

                        $scope.showCategoryDropdown = false;
                        $scope.showDashboardDropdown = true;
                        break;
                }

            }

            $scope.showOrHidePanels();
        }]);


    </script>
    <!--[if LT IE  10]>
        <script>
            i_am_ie9 = true;
        </script>
    <![endif]-->

    @Scripts.Render("~/scripts/dashboards-page")
}

@section MainSection
{
    <div id="server-items-container" class="server-items-container" ng-controller="categoryController">
        <span class="su su-sidebar-expand category-collapse pull-left" title="[[[Expand]]]" data-toggle="tooltip" data-placement="top"></span>
        <div id="item-list-panel" class="item-list-panel pull-left">
            <ul class="item-navigation" role="tablist">
                <li class="favorite-items @(ViewBag.Url.IndexOf("/dashboards?view=favorites") > -1 ? "active" : (@ViewBag.HasFavoriteItem == true ? @activeClass: string.Empty))" data-value="favorites" href="/@dashboardCultureUrl?view=favorites" title="[[[Favorite Dashboards]]]" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.FavouriteItems)" data-section="[[[Favorite Dashboards]]]">
                    <a class="tab-header" href="@dashboardUrl?view=favorites" role="tab">
                        <i class="su su-favorite"></i>
                    </a>
                </li>
                <li class="recent-items @(ViewBag.Url.IndexOf("/dashboards?view=recent") > -1 ? "active" : String.Empty)" href="/@dashboardCultureUrl?view=recent" title="[[[Recent Dashboards]]]" data-value="recent" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.RecentItems)" data-section="[[[Recent Dashboards]]]">
                    <a class="tab-header" href="@dashboardUrl?view=recent" role="tab">
                        <i class="su su-recent-dashboards"></i>
                    </a>
                </li>
                <li class="all-items @(ViewBag.Url.IndexOf("/dashboards?view=categories") > -1 ? "active" : String.Empty) @(ViewBag.CategoryName != null ? "active" : String.Empty)" data-value="categories" href="/@dashboardCultureUrl?view=categories" title="[[[All Categories]]]" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.AllCategory)" data-section="[[[All Categories]]]">
                    <a class="tab-header" href="@dashboardUrl?view=categories" role="tab">
                        <i class="su su-categoried-dashboard"></i>
                    </a>
                </li>
                <li class="public-items @(ViewBag.Url.IndexOf("/dashboards?view=public") > -1 ? "active" : String.Empty)" href="/@dashboardCultureUrl?view=public" title="[[[Public Dashboards]]]" data-value="public" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.PublicItems)" data-section="[[[Public Dashboards]]]">
                    <a class="tab-header" href="@dashboardUrl?view=public" role="tab">
                        <i class="su su-public-dashboards"></i>
                    </a>
                </li>
                <li class="all-dashboard @(ViewBag.Url.IndexOf("/dashboards?view=all") > -1 ? "active" : (@ViewBag.HasFavoriteItem == false ? @activeClass: string.Empty))" data-value="all" href="/@dashboardCultureUrl?view=all" title="[[[All Dashboards]]]" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.AllDashboards)" data-section="[[[All Dashboards]]]">
                    <a class="tab-header" href="@dashboardUrl?view=all" role="tab">
                        <i class="su su-all-dashboards"></i>
                    </a>
                </li>
                <li class="draft-items @(ViewBag.Url.IndexOf("/dashboards?view=drafts") > -1 ? "active" : string.Empty)" data-value="drafts" href="/@dashboardCultureUrl?view=drafts" title="[[[Draft Dashboards]]]" data-toggle="tooltip" data-placement="top" ng-click="onClickDisplayCategory($event)" data-display-category="@((int)DisplayCategory.DraftItems)" data-section="Draft Dashboards">
                    <a class="tab-header" href="@dashboardUrl?view=drafts" role="tab">
                        <i class="su su-draft"></i>
                    </a>
                </li>
                <li class="category-collapse pull-right" title="[[[Collapse]]]" data-toggle="tooltip" data-placement="top">
                    <a class="tab-header" href="">
                        <i class="su su-sidebar-collapse"></i>
                    </a>
                </li>
            </ul>

            <div id="category-listing" class="col-lg-12 col-md-12 col-sm-12 col-xs-12 @(ViewBag.CategoryName != null ? "category" : string.Empty)">
                <span class="su su-arrow-back col-lg-1 col-md-1 col-sm-1 col-xs-1 no-padding" id="back-icon" title="[[[Back]]]" ng-click="onBackButtonClick()" style="display: @backButton"></span>
                @if (sectionName != null)
                {
                    if (isMarkItemsPublic == false && isAdmin == true)
                    {
                        <div class="tool-tip col-lg-1 col-md-1 col-sm-1 col-xs-1" style="display:none; padding-left: 7px; cursor:pointer">
                            <span class="dropdown-toggle" style="display:block; padding-top:8px; " data-toggle="dropdown" id="help-text-default"><span id="error_icon" class="su su-warning-alt" title="" style="color:yellow;"></span></span>
                            <div class="dropdown-menu" role="menu" id="help-text-message" style="left:18px; width: 300px; padding-left : 5px;margin-left:-11px">
                                [[[ Public Dashboards disabled in ]]] <a href="~/administration/dashboard-settings">[[[dashboard settings.]]] </a>

                            </div>

                        </div>
                    }
                    else if (isMarkItemsPublic == false && isAdmin == false)
                    {
                        <div class="tool-tip col-lg-1 col-md-1 col-sm-1 col-xs-1" style="display:none; padding-left: 7px; cursor:pointer">
                            <span class="dropdown-toggle" style="display:block; padding-top:8px; " data-toggle="dropdown" id="help-text-default"><span id="error_icon" class="su su-warning-alt" title="" style="color:yellow;"></span></span>
                            <div class="dropdown-menu" role="menu" id="help-text-message" style="left:18px; width: 300px; padding-left : 5px;margin-left:-11px">
                                [[[Public Dashboards disabled by the system administrator. Please contact your system administrator to enable this.]]]

                            </div>

                        </div>
                    }
                    <span id="category-section-name" class="col-lg-5 col-md-5 col-sm-5 col-xs-5" title="@sectionName" data-toggle="tooltip" data-placement="top">
                        @sectionName
                    </span>
                }
                else
                {
                    <span id="category-section-name" class="col-lg-6 col-md-6 col-sm-6 col-xs-6" title="[[[Favorites]]]" data-toggle="tooltip" data-placement="top">[[[Favorites]]]</span>
                }

                <div style="width:50%; float:right;" class="col-lg-6 col-md-6 col-sm-6 col-xs-6 no-padding text-right sorting" ng-show="showDashboardDropdown" ng-cloak>
                    <span class="dropdown text-right" id="field">
                        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">
                            <span class="selected selected-field" data-value="ModifiedDate">[[[Modified Date]]]</span>
                            <span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu dashboard-sort">
                            <li>
                                <a class="dashboard-sort-options" data-value="Name" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Dashboard Name]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options" data-value="CreatedByDisplayName" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Owner Name]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options" data-value="CreatedDate" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Added Date]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options selected" data-value="ModifiedDate" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Modified Date]]]</span>
                                </a>
                            </li>
                        </ul>
                    </span>

                    <span class="su su-sort-down-up text-right" id="order" data-value="descending">
                        <span class="path1 sorting-icon" style="margin-right: -5px"></span>
                        <span class="path2 sorting-icon opacity"></span>
                    </span>

                    <div class="search-area" role="search">
                        <span class="su su-search search-item pull-left" title="[[[Search]]]" data-toggle="tooltip" data-placement="left"></span>
                        <div id="input-div">
                            <input type="text" class="search-home-section" id="search-home-page" ng-model="search.Name" placeholder="[[[Search]]]" autocomplete="off" />
                        </div>
                        <span class="su su-inner-close close-icon category" ng-click="clearSearch()" id="clear-search" title="[[[Close search]]]" data-container='body' data-toggle="tooltip" data-placement="top"></span>
                    </div>
                </div>

                <div style="width:50%; float:right;" class="col-lg-6 col-md-6 col-sm-6 col-xs-6 no-padding text-right sorting" ng-show="showCategoryDropdown" ng-cloak>
                    <span class="dropdown text-right" id="field">
                        <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">
                            <span class="selected selected-field" data-value="ModifiedDate">[[[Modified date]]]</span>
                            <span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu dashboard-sort">
                            <li>
                                <a class="dashboard-sort-options" data-value="Name" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Category Name]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options" data-value="CreatedByDisplayName" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Owner name]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options" data-value="CreatedDate" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Added date]]]</span>
                                </a>
                            </li>
                            <li>
                                <a class="dashboard-sort-options selected" data-value="ModifiedDate" href="javascript:void(0);">
                                    <i class="su su-tick"></i>
                                    <span class="search-option">[[[Modified date]]]</span>
                                </a>
                            </li>
                        </ul>
                    </span>

                    <span class="su su-sort-down-up text-right" id="order" data-value="descending">
                        <span class="path1 sorting-icon" style="margin-right: -5px"></span>
                        <span class="path2 sorting-icon opacity"></span>
                    </span>

                    <div class="search-area" role="search">
                        <span class="su su-search search-item pull-left" title="[[[Search]]]" data-toggle="tooltip" data-placement="left"></span>
                        <div id="input-div"><input type="text" class="search-home-section" id="search-home-page" ng-model="search.Name" placeholder="[[[Search]]]" autocomplete="off" /></div>
                        <span class="su su-inner-close close-icon category" ng-click="clearSearch()" id="clear-search" title="[[[Close search]]]" data-toggle="tooltip" data-placement="left"></span>
                    </div>
                </div>

            </div>

            <div id="parent-scroll-element">
                <div id="scroll-element">
                    <div id="category-list" ng-show="showCategories">
                        <div id="scroll-content">
                            <ul id="listing" class="hide-display">
                                <li ng-repeat="category in categories | filter:search | filter:customSearchFilter | orderBy:sortBy" class="category-section">
                                    <a class="category-link" ng-click="getItemsInCategory($event)" data-value="@Html.Encode(dashboardUrl + "?category={{category.Name}}")" data-display-category="@((int)DisplayCategory.SpecificCategory)" data-id="{{category.Id}}" data-category="{{category.Name}}" href="@Html.Encode(dashboardUrl + "?category={{category.Name}}")"><span class="category-name" title="{{category.Name}}" data-toggle="tooltip" data-placement="top" data-name="{{category.Name}}" ng-bind="category.Name"></span></a>
                                    <span class="pull-right badge item-count" ng-bind="category.ReportsCount"></span>
                                    <ul class="CategorySettings pull-right">
                                        <li class="dropdown" ng-if="category.CreatedById==@(currentUserId) || @(Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]).ToString().ToLower()) == true || category.CanWrite || category.CanDelete">
                                            <span class="dropdown-toggle su su-settings-1" title="[[[Actions]]]" data-placement="top" data-toggle="dropdown">
                                            </span>
                                            <ul class="dropdown-menu" role="menu">
                                                <li ng-if="category.CreatedById==@(currentUserId) || @(Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]).ToString().ToLower()) == true">
                                                    <a href="javascript:void(0);" class="item-permissions" title="" data-itemname="{{category.Name}}" data-owner-id="{{category.CreatedById}}" data-item-id="{{category.Id}}" data-item-type="{{category.ItemType}}">
                                                        <i class="su su-manage-permission"></i>
                                                        <span>[[[Manage Permissions]]]</span>
                                                    </a>
                                                    <hr />
                                                </li>
                                                <li ng-if="category.CanWrite">
                                                    <a class="EditCategory" href="javascript:void(0)" title="" data-item-id="{{category.Id}}">
                                                        <i class="su su-edit"></i>
                                                        <span>[[[Update]]]</span>
                                                    </a>
                                                </li>
                                                <li ng-if="category.CanDelete">
                                                    <a class="DeleteCategory" data-item-id="{{category.Id}}" title="" data-itemtype="{{category.ItemType}}" data-name="{{category.Name}}" href="javascript:void(0)">
                                                        <i class="su su-delete"></i>
                                                        <span>[[[Delete]]]</span>
                                                    </a>
                                                </li>
                                            </ul>
                                    </ul>
                                </li>
                                <li ng-show="!(categories| filter:search).length" id="category-no-records">[[[No categories available to display]]]</li>
                            </ul>
                        </div>
                        @if (permission[ItemType.Category])
                        {
                            <div id="create-new-category" class="col-lg-12 hide-display">
                                <div id="create-section" onclick="openNewCategoryPopup()"><span class="su su-add-category add-icon"></span>[[[NEW CATEGORY]]]</div>
                            </div>
                        }
                    </div>

                </div>
            </div>

            <div id="category-info">

            </div>
            <input type="hidden" id="culture-info" value="@ViewBag.Culture" />
            <input type="hidden" value="@isMarkItemsPublic.ToString()" id="isMarkItemspublic" />
            <input type="hidden" id="user-id" value="@userId" />
            <div id="item-grid-container" data-request-type="{{itemRequestType}}" data data-grid-name="dashboards" ng-show="showDashbaords">
                @Html.Partial("../Items/_ItemsList", new ViewDataDictionary { { "gridName", "dashboards" }, { "categoryName", ViewBag.CategoryName as string }, { "itemName", isViewRequest == true ? ViewBag.itemName as string : string.Empty }, { "Url", currentUrl.AbsolutePath }, { "category", ViewBag.category }, { "tabName", ViewBag.tabName as string }, { "sectionName", ViewBag.sectionName as string }, { "cultureinfo", ViewBag.Culture as string } })
            </div>
        </div>
        <div id="item-viewer" class="pull-left">
            <input id="current-url" type="hidden" data-url="">
            <iframe id="dashboard_render_iframe" class="dashboard_render" name="targetframe" allowTransparency="true" scrolling="no" frameborder="0" onload=""></iframe>
            <div id="iframe-content">[[[Select a dashboard to view.]]]</div>
            @Html.Partial("../Shared/_Footer")
        </div>
    </div>

    <div id="EditCategoryPopup" style="display:none">
        <iframe id="EditCategoryPopup_iframe" class="categoryDialog"></iframe>
    </div>
    <div id="popup-container" style="display:none" class="no-padding">
        <iframe id="scheduler-popup-iframe" class="datasource-popup-frame"></iframe>
    </div>
    <div id="edit-file-popup" style="display:none">
        <iframe id="edit-file-popup-iframe" class="editDashboardDialog"></iframe>
    </div>
    <div id="publish-draft-popup" style="display:none">
        <iframe id="publish-draft-popup-iframe" class="editDashboardDialog"></iframe>
    </div>
    <div id="update-data-source-popup" style="display:none">
        <iframe id="update-data-source-popup-iframe" class="updateDataSourceDialog"></iframe>
    </div>

    @Html.Partial("../Items/_AddItems")
    @Html.Partial("../Items/_ItemVersion")
    @Html.Partial("../Items/_ItemPermission")
}
