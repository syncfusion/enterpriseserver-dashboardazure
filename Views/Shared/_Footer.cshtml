<div id="base-footer-div">
    @{
        var poweredbyClass = GlobalAppSettings.SystemSettings.IsEnablePoweredBySyncfusion ? "show" : "hide";
        var copyrightClass = GlobalAppSettings.SystemSettings.IsEnableCopyrightInfo ? "show" : "hide";
        var separatorparagraphClass = (GlobalAppSettings.SystemSettings.IsEnablePoweredBySyncfusion && GlobalAppSettings.SystemSettings.IsEnableCopyrightInfo) ? "show" : "hide";
        var separatorFooterClass = (GlobalAppSettings.SystemSettings.IsEnablePoweredBySyncfusion || GlobalAppSettings.SystemSettings.IsEnableCopyrightInfo) ? "show" : "hide";
        var nativeNameTitleCase = Context.GetPrincipalAppLanguageForRequest().GetNativeNameTitleCase();
    }
    <footer>
        @if (!DeviceDetection.IsMobile)
        {
            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12 no-padding layout-footer no-margin">

                <div class="col-xs-6 col-md-9 col-sm-9 col-lg-9 dropup no-padding language-area pull-left no-margin no-padding">
                    <div class="no-padding pull-left" id="lang_menu">
                        <button class="btn btn-default dropdown-toggle pull-left" type="button" id="dropdown-lang" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="@nativeNameTitleCase">
                            <span class="lang-overflow">@nativeNameTitleCase</span>
                            <i class="su-dropdown-arrow arrow-margin"></i>                           
                        </button>
                        @{
                            int i;
                            var langs = LanguageHelpers.GetAppLanguages().OrderBy(x => x.Key).ToArray();
                            int cellcnt = langs.Length + 1;
                            int maxcols = langs.Length + 1;
                            for (i = 1; i < cellcnt;)
                            {
                                bool lastRow = i + maxcols >= cellcnt;
                                <ul class="@(Html.Raw((i%2) == 0 ? "even" : "odd")) @(Html.Raw(lastRow ? "last" : "")) dropdown-menu" aria-labelledby="dropdownMenu2">                                
                                    @for (int j = 0; j < maxcols && i < cellcnt; ++i, ++j)
                                    {
                                        string langtag;
                                        string title;
                                        string nativelangname;
                                        if (i == 0)
                                        {
                                            langtag = "";
                                            title = "Browser default language setting";
                                            nativelangname = "Auto ";
                                        }
                                        else
                                        {
                                            LanguageTag lt = langs[i - 1].Value;
                                            title = langtag = lt.ToString();
                                            nativelangname = lt.NativeNameTitleCase;
                                        }
                                        <li>
                                            <a href="@Url.Action("SetLanguage", "Accounts",new { langtag = langtag, returnUrl = Request.Url })" title=@title><span>@nativelangname</span></a>
                                        </li>
                                    }
                                    @if (lastRow)
                                    {
                                        for (; i % maxcols != 0; ++i)
                                        {
                                            <li></li>
                                        }
                                    }
                                </ul>
                                <span class="pull-left @separatorparagraphClass" id="footer-separator">  | </span>
                                <p class="no-margin pull-left @copyrightClass" id="copyrightinfo"> @Html.Raw(GlobalAppSettings.SystemSettings.CopyrightInformation.Replace("$$CurrentYear$$", DateTime.Now.Year.ToString()))</p>
                            }
                        }
                    </div>
                </div>

                <div class="col-xs-5 col-md-3 col-sm-3 col-lg-3 no-padding no-margin pull-right" id="enablefooter">
                    @if (GlobalAppSettings.SystemSettings.IsShowPoweredBySyncfusion)
                {
                        <p class="no-margin pull-right pow @poweredbyClass" id="poweredbysyncfusion">
                            [[[Powered by]]]
                            @if (GlobalAppSettings.SystemSettings.StorageType == (int)StorageType.AzureBlob)
                            {
                                <img src="@GlobalAppSettings.AzureBlob.AzureBlobStorageUri/@GlobalAppSettings.AzureBlob.AzureBlobStorageContainerName/@GlobalAppSettings.GetStorageMode()/Content/Images/Application/Footer_Logo.png" alt="syncfusion" width="102px" height="22px">
                            }
                            else
                            {
                                <img src="@Url.Content("~/Content/Images/Application/Footer_Logo.png")" alt="Syncfusion" width="110px" height="25px">
                            }
                        </p>                       
                    }                   

                </div>

            </div>
        }

        @if (DeviceDetection.IsMobile)
        {
            <div class="col-xs-12 col-md-12 col-sm-12 col-lg-12 no-padding layout-footer no-margin">
                <div class="col-xs-5 col-md-6 col-sm-6 col-lg-6 no-padding pull-right no-margin" id="enablefooter">
                    @if (GlobalAppSettings.SystemSettings.IsShowPoweredBySyncfusion)
                    {
                        <p class="no-margin pow pull-right @poweredbyClass" id="poweredbysyncfusion">
                            [[[Powered by]]]
                            @if (GlobalAppSettings.SystemSettings.StorageType == (int)StorageType.AzureBlob)
                            {
                                <img src="@GlobalAppSettings.AzureBlob.AzureBlobStorageUri/@GlobalAppSettings.AzureBlob.AzureBlobStorageContainerName/@GlobalAppSettings.GetStorageMode()/Content/Images/Application/Footer_Logo.png" alt="syncfusion" width="102px" height="22px">
                            }
                            else
                            {
                                <img src="@Url.Content("~/Content/Images/Application/Footer_Logo.png")" alt="Syncfusion" width="110px" height="25px">
                            }
                        </p>
                    }

                </div>
                <div class="col-xs-6 col-md-6 col-sm-6 col-lg-6 dropup no-padding language-area pull-left no-margin no-padding">
                    <div class="no-padding" id="lang_menu">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdown-lang" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="@nativeNameTitleCase">
                            <span class="lang-overflow">@nativeNameTitleCase</span>
                            <i class="su-dropdown-arrow arrow-margin"></i>
                        </button>
                        @{
                            int i;
                            var langs = LanguageHelpers.GetAppLanguages().OrderBy(x => x.Key).ToArray();
                            int cellcnt = langs.Length + 1;
                            int maxcols = langs.Length + 1;
                            for (i = 1; i < cellcnt;)
                            {
                                bool lastRow = i + maxcols >= cellcnt;
                                <ul class="@(Html.Raw((i%2) == 0 ? "even" : "odd")) @(Html.Raw(lastRow ? "last" : "")) dropdown-menu" aria-labelledby="dropdownMenu2">
                                    @for (int j = 0; j < maxcols && i < cellcnt; ++i, ++j)
                                    {
                                        string langtag;
                                        string title;
                                        string nativelangname;
                                        if (i == 0)
                                        {
                                            langtag = "";
                                            title = "Browser default language setting";
                                            nativelangname = "Auto ";
                                        }
                                        else
                                        {
                                            LanguageTag lt = langs[i - 1].Value;
                                            title = langtag = lt.ToString();
                                            nativelangname = lt.NativeNameTitleCase;
                                        }
                                        <li>
                                            <a href="@Url.Action("SetLanguage", "Accounts",new { langtag = langtag, returnUrl = Request.Url })" title=@title><span>@nativelangname</span></a>
                                        </li>
                                    }
                                    @if (lastRow)
                                    {
                                        for (; i % maxcols != 0; ++i)
                                        {
                                            <li></li>
                                        }
                                    }
                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </footer>
</div>