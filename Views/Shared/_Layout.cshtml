@{
    var notificationCount = new NotificationManagement().GetUnreadNotificationCount();
    var nativeNameTitleCase = Context.GetPrincipalAppLanguageForRequest().GetNativeNameTitleCase();
    var gridName = string.Empty;
    var requestUrl = HttpContext.Current.Request.Url.AbsolutePath.ToString().ToLower();
    var dashboardsPageUrl = Url.Action("Dashboards", "Dashboards");
    var widgetsPageUrl = Url.Action("Widgets", "Widgets");
    //To show or hide menu for mobile devices
    var menuClass = DeviceDetection.IsMobile ? "collapse width" : "collapse in";

    var includeMessageBox = ViewBag.MessageBox == null || ViewBag.MessageBox == true;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
    <title>
        @ViewBag.Title
    </title>
    <script type="text/javascript">
        var rootUrl = "";
        var baseurl = "";
        var getUserNotificationsPartialViewResultUrl = "@Url.Action("GetUserNotificationsPartialViewResult", "notification")";
    </script>

    @Styles.Render("~/styles/layout")

    @RenderSection("styles", false)
    @if (!DeviceDetection.IsMobile)
    {
        @Scripts.Render("~/scripts/layout")
    }
    else
    {
        @Scripts.Render("~/scripts/layout-mobile")
    }

    <script src="~/signalr/hubs"></script>
    @Scripts.Render("~/scripts/signalr-bundle")
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var userActivity = $.connection.signalrHub;
            userActivity.client.connection = function () {
            };

            SJ.iwc.SignalR.start();
        });
    </script>

    @if (DeviceDetection.IsMobile)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                GetGridName();

                function nextEvent() {
                    $(this).on('touchend', function (e) {
                        $("html").ejWaitingPopup();
                        $("html").ejWaitingPopup("show");
                        window.location.href = ($(this).attr("href"));
                        $(this).off('touchend');
                    });
                    $(this).on('touchmove', function (e) {
                        $(this).off('touchend');
                    });
                }

                $('#main-nav a, .items a, .notification-mobile-link, .menu-options a, .notification-text-content a, .admin-page-header a, #edit-profile-heading-div a, #change-password-btn a').on('click touchstart', this, nextEvent);

                $(window).on('popstate', function (e) {
                    $("html").ejWaitingPopup("hide");
                });

                $(document).on('touchend', function (e) {
                    $(".tooltip").hide();
                });

                $(document).on("touchend", "#open-dashboard, .item-list-panel li, .favorite-item, .options-area, .option-click", function (e) {
                    if ((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i)) || (navigator.userAgent.match(/iPad/i))) {
                        $(this).click();
                    }
                });
            });

            function GetGridName() {
                gridName = $('#item-grid-container').attr("data-grid-name");

                var isScheduleGrid = $('#scheduleGrid').hasClass("schedule-grid");

                if (typeof gridName != "undefined") {
                    if (gridName === "dashboards") {
                        $(".header-org-name").text("[[[DASHBOARDS]]]");
                    }
                    else if (gridName === "widgets") {
                        $(".header-org-name").text("[[[WIDGETS]]]");
                    }
                    else if (gridName === "datasources") {
                        $(".header-org-name").text("[[[DATA SOURCES]]]");
                    }
                }
                else if (isScheduleGrid) {
                    $(".header-org-name").text("[[[SCHEDULES]]]");
                }
                else if ($("#server-app-container #homepage-page-container").length > 0) {
                    $(".header-org-name").text("[[[HOMEPAGES]]]");
                }
                else {
                    $(".header-org-name").text($(".page-name").attr("data-content"));
                }
            }
        </script>
    }
    @RenderSection("scripts", false)
    @if (GlobalAppSettings.SystemSettings.StorageType == (int)StorageType.AzureBlob)
    {
        <link rel="icon" href="@(GlobalAppSettings.AzureBlob != null ? GlobalAppSettings.AzureBlob.AzureBlobStorageUri : string.Empty)/@GlobalAppSettings.AzureBlob.AzureBlobStorageContainerName/@GlobalAppSettings.GetStorageMode()/Content/Images/Application/@GlobalAppSettings.SystemSettings.FavIcon" onerror="if (this.href !== null && this.href.toLowerCase() !== '~/content/images/application/favicon.png') this.href = '~/Content/Images/Application/Favicon.png';" />
    }
    else
    {
        <link rel="icon" href="~/Content/Images/Application/@GlobalAppSettings.SystemSettings.FavIcon" onerror="if (this.href !== null && this.href.toLowerCase() !== '~/content/images/application/favicon.png') this.href = '~/Content/Images/Application/Favicon.png';" />
    }
    @if (includeMessageBox)
    {
        <script>
            $(document).ready(function () {
                $("#messageBox").ejDialog({
                    width: (window.innerWidth > 460) ? "450px" : (window.innerWidth - 10),
                    showOnInit: false,
                    allowDraggable: true,
                    enableResize: false,
                    height: "auto",
                    showHeader: false,
                    enableModal: true,
                    close: "onMessageDialogClose"
                });
            });
        </script>
    }

</head>
<body ng-app="serverApp" class="clearfix" id="body" style="background-image: url('@Url.Content("~/Content/Images/waitingpopup.gif")');background-color: #fff; background-repeat: no-repeat; background-position: center center;">
    <div id="server-app-container" style="opacity: 0">
        <section id="header-area">
            @Html.Partial("../Shared/_Header")
        </section>
        <section id="menu-area" class="collapse">
            @Html.Partial("../Shared/_Menu")
        </section>
        <div id="content-area" class="clearfix">
            @RenderSection("MainSection", true)
            <div id="success-alert">
                <div id="image-container">
                    <div class="image-holder">
                        <span class="su su-tick" alt="Success Icon"></span>
                    </div>
                </div>
                <div id="message">
                    <h1 id="message-header"></h1>
                    <span id="message-content"></span>
                </div>
            </div>
            <div id="warning-alert">
                <div id="image-container">
                    <span class="su su-warning-alt" alt="Warning Icon"></span>
                </div>
                <div id="message" class="div-close">
                    <h1 id="message-header"></h1>
                    <span id="message-content"></span>
                </div>
                <div class="close-div">
                    <span id="close-content">[[[Close]]]</span>
                </div>
            </div>
            <div id="mobile-alert">
                <span id="message"></span>
            </div>
        </div>
        @{
            if ((requestUrl.IndexOf(dashboardsPageUrl, StringComparison.OrdinalIgnoreCase) == -1 && requestUrl.IndexOf(widgetsPageUrl, StringComparison.OrdinalIgnoreCase) == -1))
            {
                @Html.Partial("../Shared/_Footer")
            }
        }
        @if (includeMessageBox)
        {
            <div id="messageBox">
                <div class="message-header"></div>
                <div class="message-box-close"></div>
                <div class="message-content text-center"></div>
                <div class="message-box-btn-holder"></div>
            </div>
        }
    </div>

    <div class="page-additional-navigation">
        <input id="userName" type="hidden" value="@((HttpContext.Current.User as ServerPrincipal).UserId)" />
        <input id="BaseUrlHidden" type="hidden" value="/" />
        <input id="baseurl" name="baseurl" type="hidden" value="" />
        <input id="DateFormat" name="DateFormat" type="hidden" value="@GlobalAppSettings.SystemSettings.DateFormat" />
        <input id="DesignerName" name="DesignerName" type="hidden" value="@(GlobalAppSettings.SystemSettings.InstallationFolder + "dashboarddesigner")" />
    </div>
    <div id="alert-notification">
    </div>

    <div id="mobile-menu" style="display: none">
        <input type="hidden" class="page-name" id="page" data-content="" />

        <div id="menu-list">
        </div>

        <div id="notification" class="pull-right">
            <div id="notification_area_link">
                <a href="@Url.Action("getusernotifications", "notification")">
                    <span id="notification_area_icon" class="su su-notification-alert pull-left">
                        @if (notificationCount != 0)
                        {
                            <span id="notification-indicator"></span>
                        }
                    </span>
                </a>
            </div>
        </div>

    </div>

</body>
</html>